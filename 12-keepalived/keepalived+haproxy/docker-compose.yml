services:
  # HAProxy + Keepalived Node A (Master)
  node_a:
    build:
      context: .
    container_name: haproxy_node_a
    networks:
      keepalived-net:
        ipv4_address: 172.20.0.10
    volumes:
      - ./master.conf:/etc/keepalived/external/keepalived.conf:ro
    environment:
      - NODE_NAME=HAProxy Node A
    cap_add:
      - NET_ADMIN
      - NET_RAW
    restart: always
    depends_on:
      - nginx_a
      - nginx_b

  # HAProxy + Keepalived Node B (Backup)
  node_b:
    build:
      context: .
    container_name: haproxy_node_b
    networks:
      keepalived-net:
        ipv4_address: 172.20.0.20
    volumes:
      - ./backup.conf:/etc/keepalived/external/keepalived.conf:ro
    environment:
      - NODE_NAME=HAProxy Node B
    cap_add:
      - NET_ADMIN
      - NET_RAW
    restart: always
    depends_on:
      - nginx_a
      - nginx_b

  # Backend Nginx Servers
  nginx_a:
    image: nginx:alpine
    hostname: nginx_a
    container_name: nginx_a
    networks:
      keepalived-net:
        ipv4_address: 172.20.0.2
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro

  nginx_b:
    image: nginx:alpine
    hostname: nginx_b
    container_name: nginx_b
    networks:
      keepalived-net:
        ipv4_address: 172.20.0.3
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro

  # Client for testing
  client:
    image: curlimages/curl
    container_name: client
    networks:
      - keepalived-net
    command: >
      sh -c "
        echo 'Waiting for services to be ready...';
        sleep 10;
        while true; do 
          echo '--- Sending request to VIP (172.20.0.100) ---'; 
          curl -s http://172.20.0.100 || echo 'Request failed';
          sleep 2; 
        done
      "
    depends_on:
      - node_a
      - node_b
      - nginx_a
      - nginx_b

  # chaos:
  #   image: docker:cli
  #   container_name: chaos_monkey
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   command: >
  #     sh -c "
  #       echo 'Chaos Monkey starting...';
  #       sleep 10;
  #       while true; do
  #         echo '=== Stopping node_a ===';
  #         docker stop node_a;
  #         echo 'Waiting 20 seconds...';
  #         sleep 20;
  #         echo '=== Starting node_a ===';
  #         docker start node_a;
  #         echo 'Waiting 20 seconds...';
  #         sleep 20;
  #       done
  #     "
  #   depends_on:
  #     - node_a
  #     - node_b
  #     - client

networks:
  keepalived-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16