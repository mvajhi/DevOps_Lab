version: '3.8'

networks:
  public_net:
    external: true
  private_net:
    external: true

services:
  fleet:
    image: elastic/elastic-agent:${FLEET_VERSION}
    container_name: fleet-${HOSTNAME}
    restart: on-failure
    environment:
      ELASTIC_HOSTNAME: "${ELASTIC_HOSTNAME}"
      ELASTIC_USERNAME: "${ELASTIC_USERNAME}"
      ELASTIC_PASSWORD: "${ELASTIC_PASSWORD}"

      FLEET_SERVER_ENABLE: "true"
      FLEET_SERVER_HOST: "0.0.0.0"
      FLEET_SERVER_PORT: "8220"
      FLEET_SERVER_ELASTICSEARCH_HOST: "${ELASTICSEARCH_HOSTNAME}"
      FLEET_SERVER_INSECURE_HTTP: "true"

      KIBANA_FLEET_SETUP: "true"
      KIBANA_FLEET_HOST: "${KIBANA_HOSTNAME}"
    
    networks:
      - public_net
      - private_net

    labels:
      # network
      - traefik.enable=false
      - traefik.docker.network=public_net

      # http router
      - traefik.http.routers.fleet.rule=Host(`${FLEET_SUB_DOMAIN}.${DOMAIN}`)
      - traefik.http.routers.fleet.entrypoints=http
      - traefik.http.routers.fleet.middlewares=redirect-to-https

      # https router
      - traefik.http.routers.fleet-secure.rule=Host(`${FLEET_SUB_DOMAIN}.${DOMAIN}`)
      - traefik.http.routers.fleet-secure.entrypoints=https
      - traefik.http.routers.fleet-secure.tls=true
      - traefik.http.routers.fleet-secure.tls.options=default
      - traefik.http.routers.fleet-secure.tls.certresolver=default
      - traefik.http.services.fleet-secure.loadbalancer.server.port=8220

